@model MoviesQueryModel

@{
    ViewData["Title"] = "Movies library";
}
<div class="container">
    <div class="pb-3">
        <a class="btn btn-secondary" asp-controller="Serie" asp-action="Index">To Serie</a>
    </div>

    <form method="get">
        <div class="form-group col-md-3">
            <label class="text-light" asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="Movie title here...">
        </div>

        <div class="form-group col-md-3">
            <label class="text-light" asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Title Ascending</option>
                    <option value="1">Title Descending</option>
                </select>
        </div>

        <div class="pb-3 pt-3">
            <input type="submit" value="Search" class="btn btn-outline-light" />
        </div>
    </form>


    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        var maxPage = Math.Ceiling((double)Model.TotalItemsCount /
        Model.ItemsPerPage);
    }


    <div class="row">
        <div class="containter bg-white bg-opacity-50 p-3 mt-3 mb-3" style="border-radius: 0.5em;">
            <div class="d-flex flex-wrap w-100 gap-2">
                @foreach (var movie in Model.Movies)
                {
                    <partial name="_MovieAllPartial" model="@movie" />
                }
            </div>
        </div>
    </div>

    <div class="row mb-5">
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
            <a class="btn btn-outline-light @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Movie"
               asp-action="Index"
               asp-route-currentPage="@previousPage"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)">Previous Page</a>
        </div>

        @{
            var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
            !Model.Movies.Any();
        }

        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
            <a class="btn btn-outline-light
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Movie"
               asp-action="Index"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)">Next Page</a>
        </div>
    </div>
</div>